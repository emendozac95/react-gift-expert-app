{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","event","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","id","title","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4MAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAU,IAFA,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACI,mCACA,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAACS,GAAD,MAAW,CAACP,MAC3BC,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,e,8BCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHR,IAAG,UAAEQ,EAAIC,cAAN,aAAE,EAAYC,iBAAiBV,IAClCW,GAAIH,EAAIG,GACRC,MAAOJ,EAAII,UAVA,kBAcZN,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAwB,IAAtBF,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOZ,EAAU,EAAVA,IAErC,OADAc,QAAQC,IAAIJ,EAAIC,EAAOZ,GAEnB,sBAAKgB,UAAU,yCAAf,UACE,qBAAKC,IAAMjB,EAAMkB,IAAKN,IACtB,kCAAKA,EAAL,WCHGO,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAc,IAAD,EAGbd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAL0B,mBAGhCC,EAHgC,KAGzBC,EAHyB,KAkBvC,OAVAC,qBAAW,WACP1B,EAASC,GACR0B,MAAM,SAAAC,GACCH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAGtB,CAAEtB,IAEEuB,EDfwBK,CAAa5B,GAAhCW,EAFuB,EAE5BJ,KAAae,EAFe,EAEfA,QAEpB,OACI,qCACI,mCAAMtB,EAAN,OAECsB,GAAW,mBAAGJ,UAAU,iCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAEQP,EAAOF,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAESA,GADAA,EAAIG,aEdxBgB,EAAgB,WAAO,IAAD,EAEI3C,mBAAS,CAAC,gBAFd,mBAEzB4C,EAFyB,KAEb7C,EAFa,KAShC,OACG,qCACG,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEM6C,EAAWrB,KAAK,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEGA,SAAWA,GADNA,YCf1B+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.8ceeb269.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState ('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( (event) => [inputValue]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=uj0E2MTn2a3Vi80O31a0SLpHqZb0j5f8`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            url: img.images?.downsized_medium.url,\r\n            id: img.id,\r\n            title: img.title\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    console.log(id, title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n          <img src={ url } alt={title} />\r\n          <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3> {category} </h3>\r\n\r\n            {loading && <p className=\"animate__bounce animate__flash\">Loading...</p>}\r\n            \r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( (img) => (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            { ...img} \r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category) => {\r\n\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n        .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n        })\r\n    }, [ category ])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GiftExpertApp = () => {\r\n\r\n   const [categories, setCategories] = useState(['Dragon Ball'])\r\n\r\n   //const handleAdd = (element = 'Naruto') => {\r\n   //   setCategories( [...categories, 'Naruto' ] );\r\n      //setCategories();\r\n   //}\r\n\r\n   return (\r\n      <>\r\n         <h2>GiftExpertApp</h2>\r\n         <AddCategory setCategories={setCategories}/>\r\n         <hr />\r\n         <ol>\r\n            {\r\n               categories.map( category => (\r\n                  <GifGrid\r\n                     key={category}\r\n                     category={ category}\r\n                  />\r\n               ))\r\n            }\r\n         </ol>\r\n      </>\r\n   );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport { GiftExpertApp } from './GiftExpertApp';\n// reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();"],"sourceRoot":""}